package GameRuleLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptGameRule = createDescriptorForGameRule();
  /*package*/ final ConceptDescriptor myConceptInsertAction = createDescriptorForInsertAction();
  /*package*/ final ConceptDescriptor myConceptModifyAction = createDescriptorForModifyAction();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptCondition, myConceptGameRule, myConceptInsertAction, myConceptModifyAction);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.GameRule:
        return myConceptGameRule;
      case LanguageConceptSwitch.InsertAction:
        return myConceptInsertAction;
      case LanguageConceptSwitch.ModifyAction:
        return myConceptModifyAction;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GameRuleLanguage", "Action", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8d9L);
    b.class_(false, true, false);
    b.origin("r:06154292-2ec1-4729-9e74-188f8af946cf(GameRuleLanguage.structure)/5909584729281263833");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GameRuleLanguage", "Condition", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8cdL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:06154292-2ec1-4729-9e74-188f8af946cf(GameRuleLanguage.structure)/5909584729281263821");
    b.version(2);
    b.associate("patternType", 0x520310003ee2dfd4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("5909584729281322964").done();
    b.aggregate("constraints", 0x520310003ee2df9dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("5909584729281322909").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGameRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GameRuleLanguage", "GameRule", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8beL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:06154292-2ec1-4729-9e74-188f8af946cf(GameRuleLanguage.structure)/5909584729281263806");
    b.version(2);
    b.aggregate("conditions", 0x520310003ee1f8c8L).target(0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8cdL).optional(true).ordered(true).multiple(true).origin("5909584729281263816").done();
    b.aggregate("actions", 0x520310003ee1f911L).target(0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8d9L).optional(true).ordered(true).multiple(true).origin("5909584729281263889").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInsertAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GameRuleLanguage", "InsertAction", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x69bb4663c58e4d37L);
    b.class_(false, false, false);
    b.super_("GameRuleLanguage.structure.Action", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8d9L);
    b.origin("r:06154292-2ec1-4729-9e74-188f8af946cf(GameRuleLanguage.structure)/7618760588957470007");
    b.version(2);
    b.aggregate("value", 0x69bb4663c58e4d38L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("7618760588957470008").done();
    b.alias("insert");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModifyAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GameRuleLanguage", "ModifyAction", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x69bb4663c5a104deL);
    b.class_(false, false, true);
    b.super_("GameRuleLanguage.structure.Action", 0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8d9L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:06154292-2ec1-4729-9e74-188f8af946cf(GameRuleLanguage.structure)/7618760588958696670");
    b.version(2);
    b.associate("factExpression", 0x69bb4663c5a104f8L).target(0x7243e6ac03d84eb4L, 0x9ecc7a6ffc7a53d2L, 0x520310003ee1f8cdL).optional(false).origin("7618760588958696696").done();
    b.aggregate("value", 0x69bb4663c5a104dfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(true).origin("7618760588958696671").done();
    b.alias("modify");
    return b.create();
  }
}
